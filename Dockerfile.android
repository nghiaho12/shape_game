FROM debian:12.8

RUN apt update && \
    apt install -y g++ git cmake wget unzip pkg-config openjdk-17-jdk ant python3

# Android SDK
RUN wget https://dl.google.com/android/repository/android-ndk-r27c-linux.zip && \
    unzip android-ndk-r27c-linux.zip

WORKDIR /android-sdk
RUN wget https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip && \
    unzip commandlinetools-linux-11076708_latest.zip

RUN cd cmdline-tools/bin && \
    yes | ./sdkmanager --licenses --sdk_root=/android-sdk && \
    ./sdkmanager "platform-tools" "platforms;android-14" --sdk_root=/android-sdk

# SDL
WORKDIR /
RUN git clone -b preview-3.1.6 --depth 1 https://github.com/libsdl-org/SDL.git
RUN cd SDL/build-scripts && \
    PATH=$PATH:/android-ndk-r27c ./androidbuildlibs.sh

# Create Android project with an empty main.cpp to cache the gradle download step
RUN mkdir -p /shape_game/src && \
    touch /shape_game/src/main.cpp && \
    cd /SDL/build-scripts && \
    ./create-android-project.py org.libsdl.shape_game /shape_game/src/main.cpp

# Build the empty project to get everything in place
RUN cd /SDL/build/org.libsdl.shape_game && \
    ANDROID_HOME=/android-sdk ANDROID_NDK_HOME=android-ndk-r27c ./gradlew assembleDebug

# GLM is header only
RUN cd / && git clone -b 1.0.1 --depth 1 https://github.com/g-truc/glm.git
RUN cd /SDL/build/org.libsdl.shape_game/app/jni/src && \
    ln -s /glm/glm .

# Enable C++ STL
RUN cd /SDL/build/org.libsdl.shape_game/app/jni && \
    sed -i 's/# APP_STL/APP_STL/g' Application.mk

# Enable C++20
RUN cd /SDL/build/org.libsdl.shape_game/app/jni/src && \
    echo 'set(CMAKE_CXX_STANDARD 20)' >> CMakeLists.txt && \
    echo 'APP_CPPFLAGS := -std=c++20' >> /SDL/build/org.libsdl.shape_game/app/jni/Application.mk

# Enable x86_64 build for debugging on the emulator
# RUN cd /SDL/build/org.libsdl.shape_game/app && \
#     sed -i "s/abiFilters 'arm64-v8a'/abiFilters 'arm64-v8a','x86_64'/g" build.gradle

RUN rm -rf /SDL/build/org.libsdl.shape_game/app/src/main/res/

# Build our actual project
COPY src /SDL/build/org.libsdl.shape_game/app/jni/src/
COPY assets /SDL/build/org.libsdl.shape_game/app/src/main/assets/
COPY android/Android.mk /SDL/build/org.libsdl.shape_game/app/jni/src
COPY android/AndroidManifest.xml /SDL/build/org.libsdl.shape_game/app/src/main
COPY android/res/ /SDL/build/org.libsdl.shape_game/app/src/main/res/

# third party licenses
RUN cd /SDL/build/org.libsdl.shape_game/app/src/main/assets && \
    mkdir licenses && \
    cd licenses && \
    mkdir SDL3 && cp /SDL/LICENSE.txt SDL3 && \
    mkdir glm && cp /glm/copying.txt glm

RUN cd /SDL/build/org.libsdl.shape_game && \
    ANDROID_HOME=/android-sdk ANDROID_NDK_HOME=/android-ndk-r27c ./gradlew assembleRelease

ENV VERSION=1.0.0
RUN mv /SDL/build/org.libsdl.shape_game/app/build/outputs/apk/release/app-release-unsigned.apk \
    /SDL/build/org.libsdl.shape_game/app/build/outputs/apk/release/shape_game-${VERSION}-Android.apk

CMD ["/usr/bin/python3", "-m", "http.server", "--directory", "/SDL/build/org.libsdl.shape_game/app/build/outputs/apk/release"]
